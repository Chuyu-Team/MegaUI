<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
    <Type Name="YY::MegaUI::StringView&lt;*&gt;" Priority="MediumLow">
        <Intrinsic Name="GetSize" Expression="cchString" />
        <Intrinsic Name="GetEncoding" Expression="eEncoding" />
        <DisplayString Condition="GetEncoding() == YY::Base::Encoding::UTF8">{ (size_t)szString,x } u8{ szString,s8 }</DisplayString>
        <DisplayString Condition="GetEncoding() != YY::Base::Encoding::UTF8">{ szString }</DisplayString>
        <StringView Condition="GetEncoding() == YY::Base::Encoding::UTF8">szString,s8</StringView>
        <StringView Condition="GetEncoding() != YY::Base::Encoding::UTF8">szString</StringView>
        <Expand>
            <Item Name="[Size]" ExcludeView="simple">GetSize()</Item>
            <Item Name="[Encoding]" ExcludeView="simple">GetEncoding()</Item>
            <ArrayItems>
                <Size>GetSize()</Size>
                <ValuePointer>szString</ValuePointer>
            </ArrayItems>
        </Expand>

    </Type>
    
    <Type Name="YY::MegaUI::StringBase&lt;*&gt;" Priority="MediumLow">
        <Intrinsic Name="GetInternalStringData" Expression="((StringData*)szString)[-1]" />

        <Intrinsic Name="GetSize" Expression="GetInternalStringData().uSize" />
        <Intrinsic Name="GetCapacity" Expression="GetInternalStringData().uCapacity" />
        <Intrinsic Name="GetRef" Expression="unsigned(GetInternalStringData().iRef >= 0 ? GetInternalStringData().iRef : 1)" />
        <Intrinsic Name="GetLockCount" Expression="unsigned(GetInternalStringData().iRef >= 0 ? 0 : GetInternalStringData().iRef * -1)" />
        <Intrinsic Name="GetEncoding" Expression="YY::Base::Encoding(eEncoding == YY::Base::Encoding::ANSI ? GetInternalStringData().eEncoding : eEncoding)" />
        <DisplayString Condition="eEncoding == YY::Base::Encoding::UTF8">{ (size_t)szString,x } u8{ szString,s8 }</DisplayString>
        <DisplayString Condition="eEncoding != YY::Base::Encoding::UTF8">{ szString }</DisplayString>
        <StringView Condition="eEncoding == YY::Base::Encoding::UTF8">szString,s8</StringView>
        <StringView Condition="eEncoding != YY::Base::Encoding::UTF8">szString</StringView>
        <Expand>
            <Item Name="[Size]" ExcludeView="simple">GetSize()</Item>
            <Item Name="[Capacity]" ExcludeView="simple">GetCapacity()</Item>
            <Item Name="[Ref]" ExcludeView="simple">GetRef()</Item>
            <Item Name="[LockCount]" ExcludeView="simple">GetLockCount()</Item>
            <Item Name="[Encoding]" ExcludeView="simple">GetEncoding()</Item>
            <ArrayItems>
                <Size>GetSize()</Size>
                <ValuePointer>szString</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>
    
    <Type Name="YY::MegaUI::String" Priority="MediumLow">
        <Intrinsic Name="GetInternalStringData" Expression="((StringData*)szANSI.szString)[-1]" />

        <Intrinsic Name="GetSize" Expression="GetInternalStringData().uSize" />
        <Intrinsic Name="GetCapacity" Expression="GetInternalStringData().uCapacity" />
        <Intrinsic Name="GetRef" Expression="unsigned(GetInternalStringData().iRef >= 0 ? GetInternalStringData().iRef : 1)" />
        <Intrinsic Name="GetLockCount" Expression="unsigned(GetInternalStringData().iRef >= 0 ? 0 : GetInternalStringData().iRef * -1)" />
        <Intrinsic Name="GetEncoding" Expression="YY::Base::Encoding(GetInternalStringData().eEncoding)" />

        <Intrinsic Name="IsANSI" Expression="GetEncoding() != YY::Base::Encoding::UTF8 &amp;&amp; GetEncoding() != YY::Base::Encoding::UTF16LE &amp;&amp; GetEncoding() != YY::Base::Encoding::UTF16BE &amp;&amp; GetEncoding() != YY::Base::Encoding::UTF32LE &amp;&amp; GetEncoding() != YY::Base::Encoding::UTF32BE" />

        <DisplayString Condition="GetEncoding() == YY::Base::Encoding::UTF8">{ (size_t)szUTF8.szString,x } u8{ szUTF8.szString,s8 }</DisplayString>
        <DisplayString Condition="GetEncoding() == YY::Base::Encoding::UTF16LE || GetEncoding() == YY::Base::Encoding::UTF16BE">{ szUTF16.szString }</DisplayString>
        <DisplayString Condition="GetEncoding() == YY::Base::Encoding::UTF32LE || GetEncoding() == YY::Base::Encoding::UTF32BE">{ szUTF32.szString }</DisplayString>
        <DisplayString Condition="IsANSI()">{ szANSI.szString }</DisplayString>
        <StringView Condition="GetEncoding() == YY::Base::Encoding::UTF8">szUTF8.szString,s8</StringView>
        <StringView Condition="GetEncoding() == YY::Base::Encoding::UTF16LE || GetEncoding() == YY::Base::Encoding::UTF16BE">szUTF16.szString</StringView>
        <StringView Condition="GetEncoding() == YY::Base::Encoding::UTF32LE || GetEncoding() == YY::Base::Encoding::UTF32BE">szUTF32.szString</StringView>
        <StringView Condition="IsANSI()">szANSI.szString</StringView>
        <Expand>
            <Item Name="[Size]" ExcludeView="simple">GetSize()</Item>
            <Item Name="[Capacity]" ExcludeView="simple">GetCapacity()</Item>
            <Item Name="[Ref]" ExcludeView="simple">GetRef()</Item>
            <Item Name="[LockCount]" ExcludeView="simple">GetLockCount()</Item>
            <Item Name="[Encoding]" ExcludeView="simple">GetEncoding()</Item>
            <ArrayItems>
                <Size>GetSize()</Size>
                <ValuePointer Condition="IsANSI()">szANSI.szString</ValuePointer>
                <ValuePointer Condition="GetEncoding() == YY::Base::Encoding::UTF8">szUTF8.szString</ValuePointer>
                <ValuePointer Condition="GetEncoding() == YY::Base::Encoding::UTF16LE || GetEncoding() == YY::Base::Encoding::UTF16BE">szUTF16.szString</ValuePointer>
                <ValuePointer Condition="GetEncoding() == YY::Base::Encoding::UTF32LE || GetEncoding() == YY::Base::Encoding::UTF32BE">szUTF32.szString</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>
    
    <Type Name="YY::Base::Containers::Array&lt;*,0,0&gt;" Priority="MediumLow">
        <Intrinsic Name="GetInternalData" Expression="((SharedData*)pData)[-1]" />
        
        <Intrinsic Name="GetSize" Expression="GetInternalData().uSize" />
        <Intrinsic Name="GetCapacity" Expression="GetInternalData().uCapacity" />
        <Intrinsic Name="GetRef" Expression="unsigned(GetInternalData().iRef >= 0 ? GetInternalData().iRef : 1)" />
        <Intrinsic Name="GetLockCount" Expression="unsigned(GetInternalData().iRef >= 0 ? 0 : GetInternalData().iRef * -1)" />
        <DisplayString>{{ Size={GetSize()} }}</DisplayString>
        <Expand>
            <Synthetic Name="[Policy]">
                <DisplayString>写时拷贝优化（COW）</DisplayString>
            </Synthetic>
            <Item Name="[Size]" ExcludeView="simple">GetSize()</Item>
            <Item Name="[Capacity]" ExcludeView="simple">GetCapacity()</Item>
            <Item Name="[Ref]" ExcludeView="simple">GetRef()</Item>
            <Item Name="[LockCount]" ExcludeView="simple">GetLockCount()</Item>
            <ArrayItems>
                <Size>GetSize()</Size>
                <ValuePointer>pData</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>
    
    <Type Name="YY::Base::Containers::Array&lt;*,1,*&gt;" Priority="MediumLow">
        <Intrinsic Name="IsSmall" Expression="Header.bSmallHeader" />
        <Intrinsic Name="GetSize" Expression="Header.uSize" />
        <Intrinsic Name="GetCapacity" Expression="IsSmall() ? sizeof(Header.Small.InsideBuffer) / sizeof(Type) : Header.Large.uCapacity" />
        <Intrinsic Name="GetLockCount" Expression="IsSmall() ? Header.Small.uLockCount : Header.Large.uLockCount" />
        <Intrinsic Name="GetData" Expression="IsSmall() ? (Type*)(Header.Small.InsideBuffer) : Header.Large.pData" />
        <DisplayString>{{ Size={GetSize()} }}</DisplayString>
        <Expand>
            <Synthetic Name="[Policy]">
                <DisplayString>小对象优化（SOO）</DisplayString>
            </Synthetic>
            <Item Name="[Size]" ExcludeView="simple">GetSize()</Item>
            <Item Name="[Capacity]" ExcludeView="simple">GetCapacity()</Item>
            <Item Name="[LockCount]" ExcludeView="simple">GetLockCount()</Item>
            <ArrayItems>
                <Size>GetSize()</Size>
                <ValuePointer>GetData()</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>

    <Type Name="YY::MegaUI::Value" Priority="MediumLow">
        <Intrinsic Name="GetValueType" Expression="ValueType(pSharedData ? pSharedData->eType : ValueType::Null)" />
        <Intrinsic Name="GetRef" Expression="pSharedData ? pSharedData->cRef : 0" />

        <DisplayString Condition="GetValueType() == ValueType::Unavailable">Unavailable</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::Unset">Unset</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::Null">Null</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::int32_t">int32Value = {pSharedData->int32Value}</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::float_t">floatValue = {pSharedData->floatValue}</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::boolean">boolValue = {pSharedData->boolValue}</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::uString">szValue = {pSharedData->szValue}</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::Point">ptVal = {pSharedData->ptVal}</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::Size">sizeVal = {pSharedData->sizeVal}</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::Rect">rectVal = {pSharedData->rectVal}</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::Element">pEleValue = {pSharedData->pEleValue}</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::ElementList">ListVal = {pSharedData->ListVal}</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::ATOM">uAtomVal = {pSharedData->uAtomVal}</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::HCURSOR">hCursorVal = {pSharedData->hCursorVal}</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::Layout">pLayout = {pSharedData->pLayout}</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::Color">ColorValue = {pSharedData->ColorValue}</DisplayString>
        <DisplayString Condition="GetValueType() == ValueType::StyleSheet">pStyleSheet = {pSharedData->pStyleSheet}</DisplayString>
        <DisplayString>Unknown type = {GetValueType()}</DisplayString>
        <Expand>
            <Item Name="[Type]" ExcludeView="simple">GetValueType()</Item>
            <Item Name="[Ref]" Condition="GetValueType() != ValueType::Null" ExcludeView="simple">GetRef()</Item>

            <Item Name="[int32Value]" Condition="GetValueType() == ValueType::int32_t">pSharedData->int32Value</Item>
            <Item Name="[floatValue]" Condition="GetValueType() == ValueType::float_t">pSharedData->floatValue</Item>
            <Item Name="[boolValue]" Condition="GetValueType() == ValueType::boolean">pSharedData->boolValue</Item>
            <Item Name="[szValue]" Condition="GetValueType() == ValueType::uString">pSharedData->szValue</Item>
            <Item Name="[ptVal]" Condition="GetValueType() == ValueType::Point">pSharedData->ptVal</Item>
            <Item Name="[sizeVal]" Condition="GetValueType() == ValueType::Size">pSharedData->sizeVal</Item>
            <Item Name="[rectVal]" Condition="GetValueType() == ValueType::Rect">pSharedData->rectVal</Item>
            <Item Name="[pEleValue]" Condition="GetValueType() == ValueType::Element">pSharedData->pEleValue</Item>
            <Item Name="[ListVal]" Condition="GetValueType() == ValueType::ElementList">pSharedData->ListVal</Item>
            <Item Name="[uAtomVal]" Condition="GetValueType() == ValueType::ATOM">pSharedData->uAtomVal</Item>
            <Item Name="[hCursorVal]" Condition="GetValueType() == ValueType::HCURSOR">pSharedData->hCursorVal</Item>
            <Item Name="[pLayout]" Condition="GetValueType() == ValueType::Layout">pSharedData->pLayout</Item>
            <Item Name="[ColorValue]" Condition="GetValueType() == ValueType::Color">pSharedData->ColorValue</Item>
            <Item Name="[pStyleSheet]" Condition="GetValueType() == ValueType::StyleSheet">pSharedData->pStyleSheet</Item>
        </Expand>
    </Type>
 
</AutoVisualizer>